
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JOptionPane;



public class TestDuro {
    
    
        public static void main(String[] args) throws ListaVaciaException, IOException {
      
       
          ListaDoble listaPrueba= new ListaDoble();
           ListaDoble listaPrueba2= new ListaDoble();
          ListaCircular contra = new ListaCircular();
          ListaCircular contra2 = new ListaCircular();
          ListaDoble Resultado= new ListaDoble();
            ListaDoble Resultado2= new ListaDoble();
            
            
            
            
         int opcion =Integer.parseInt(JOptionPane.showInputDialog("Introduce el numero de la opcion  1= Encriptar  2= Desencriptar"));
		
		//System.out.printf("Elige la opción deseada: %nCuadrado %nRectangulo %nTriangulo %nCirculo%n");
		
		int caso=opcion;
		
		switch(caso){
		
		case 1:
			 listaPrueba.LeerStream(listaPrueba);
          //listaPrueba.mostrarDatos();
          System.out.printf("%n");
          //System.out.printf("%n %s %n",listaPrueba.contarDatos());
          
         // System.out.printf("%s",listaPrueba.contarDatos());
         
         String pass =(JOptionPane.showInputDialog("Introduce la contraseña (Por lo menos 3 caracteres)"));
         
             while(pass.length()<3){
                 
            pass =(JOptionPane.showInputDialog("Introduce la contraseña (Por lo menos 3 caracteres)"));

             }  
              
         //System.out.printf("%n");

                contra=contra.LeerPass(pass);
                //contra.imprimir();
               // System.out.printf("%n");

                Resultado.Suma(listaPrueba, contra);
                
              // Resultado.mostrarDatos();
              // System.out.printf("%n");
               
               //Crear método para devolver los bytes a String
               Resultado.SacarStream(Resultado);

			
			break;
			
		case 2:
			
                    listaPrueba2.LeerStream(listaPrueba2);
            //  listaPrueba2.mostrarDatos();
              System.out.printf("%n");
            String pass2 =(JOptionPane.showInputDialog("Introduce la contraseña"));
            //System.out.printf("%n");
             contra2=contra2.LeerPass(pass2);
            // contra2.imprimir();
              // System.out.printf("%n");
               Resultado2.Resta(listaPrueba2, contra2);
               Resultado2.SacarStream(Resultado2);
			
			break;				
		default:
			System.out.printf("La opcion no es valida");
		}
		
            
            
           /* 
            
          
          listaPrueba.LeerStream(listaPrueba);
          listaPrueba.mostrarDatos();
          System.out.printf("%n");
          //System.out.printf("%n %s %n",listaPrueba.contarDatos());
          
         // System.out.printf("%s",listaPrueba.contarDatos());
         
         String pass =(JOptionPane.showInputDialog("Introduce la contraseña"));
                
              
         System.out.printf("%n");

                contra=contra.LeerPass(pass);
                contra.imprimir();
                System.out.printf("%n");

                
                Resultado.Suma(listaPrueba, contra);
                
               Resultado.mostrarDatos();
               System.out.printf("%n");
               
               
               //Crear método para devolver los bytes a String
               Resultado.SacarStream(Resultado);

              //Resultado.insertarListaEnArchivo(Resultado);
              
              
            
            */
            //DESENCRIPTAMOS
              
              
             /*
            listaPrueba2.LeerStream(listaPrueba2);
              listaPrueba2.mostrarDatos();
              System.out.printf("%n");
            String pass2 =(JOptionPane.showInputDialog("Introduce la contraseña"));
            System.out.printf("%n");
             contra2=contra2.LeerPass(pass2);
             contra2.imprimir();
               System.out.printf("%n");
               Resultado2.Resta(listaPrueba2, contra2);
               Resultado2.SacarStream(Resultado2);
               
               */
               



                
                
                
                
                
                
                
                
                
                
                
                
                
                
                }
        }

